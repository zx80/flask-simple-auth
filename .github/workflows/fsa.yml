name: FlaskSimpleAuth Package

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
        - version: "pypy3.10"
          deps: demo,password,jwt,cors,httpauth,redis,memcached
        # FIXME psycopg2 does not work with pypy3.11
        - version: "pypy3.11"
          deps: demo,password,jwt,cors,httpauth,redis,memcached
        - version: "3.10"
          deps: demo,password,jwt,cors,httpauth,redis,memcached
        - version: "3.11"
          deps: demo,password,jwt,cors,httpauth,redis,memcached
        - version: "3.12"
          deps: demo,password,jwt,cors,httpauth,redis,memcached
        - version: "3.13"
          deps: demo,password,jwt,cors,httpauth,redis,memcached
        # 2025-03-07 KO (pydantic-core depends on pyo3, wait for pydantic 2.11)
        # 2025-04-08 KO (cryptography-cffi)
        # - version: "3.13t"
        #   gil: 0
        #   deps: demo,passwrd,cors,httpauth,redis,memcached
        # - version: "3.13t"
        #   gil: 1
        #   deps: demo,passwrd,cors,httpauth,redis,memcached
        # FIXME 2025-04-08 "3.14" https://github.com/pydantic/pydantic-core/issues/1504
        # - version: "3.14"
        #   deps: demo,password,jwt,cors,httpauth,redis,memcached
    env:
      PYTHON_GIL: ${{ matrix.python.gil }}
    steps:
    # General Setup
    - name: Install Packages
      run: sudo apt install python3-dev libldap-dev libsasl2-dev gcc
    - name: Activate Postgres
      run: |
        sudo systemctl start postgresql.service
        sudo -u postgres createuser -s $USER
        sudo -u postgres createdb -O $USER $USER
    - name: Git Checkout
      uses: actions/checkout@v4
    - name: Set up Redis
      uses: supercharge/redis-github-action@1.4.0
    - name: Set up Memcached
      uses: niden/actions-memcached@v7
    - name: Set up Python ${{ matrix.python.version }}
      # uses: actions/setup-python@main
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python.version }}
        allow-prereleases: true
        cache: "pip"
    - name: Install Python Dependencies
      run: make DEPS=${{ matrix.python.deps }} dev
    # Checks
    - name: Check with pyright
      run: make check.pyright
    - name: Check with ruff
      run: make check.ruff
    - name: Check with flake8
      run: make check.flake8
    - name: Check with pytest
      run: make check.pytest
    - name: Check with coverage
      run: make check.coverage
